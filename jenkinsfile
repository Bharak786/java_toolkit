pipeline {
    agent any
    stages {
        stage('Parameters'){
            steps {
                script {
                    properties([
                        parameters([
                            [$class: 'ChoiceParameter', 
                                choiceType: 'PT_SINGLE_SELECT', 
                                description: 'Select the Environment from the Dropdown List', 
                                filterLength: 1, 
                                filterable: false, 
                                name: 'Env', 
                                script: [
                                    $class: 'GroovyScript', 
                                    fallbackScript: [
                                        classpath: [], 
                                        sandbox: false, 
                                        script: 
                                            "return['Could not get The environments']"
                                    ], 
                                    script: [
                                        classpath: [], 
                                        sandbox: false, 
                                        script: 
                                            "return['JAVA_VERSION','NODE_VERSION']"
                                    ]
                                ]
                            ],
                            [$class: 'CascadeChoiceParameter', 
                                choiceType: 'PT_SINGLE_SELECT', 
                                description: 'Select the Version from the Dropdown List',
                                name: 'Version', 
                                referencedParameters: 'Env', 
                                script: 
                                    [$class: 'GroovyScript', 
                                    fallbackScript: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: "return['Could not get Environment from Env Param']"
                                        ], 
                                    script: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: '''
                                            if (Env.equals("JAVA_VERSION")){
                                                return["8", "11", "17"]
                                            }
                                            else if(Env.equals("NODE_VERSION")){
                                                return["10", "12", "14", "17" ]
                                            }
                                            '''
                                        ] 
                                ]
                            ]
                        ])
                    ])
                }
            }
        }
        stage('Build') {
            steps {
                environment {
                    // Set the environment variable based on the selected version
                    VERSION = "${params.Version}"
                }
                // Use the selected version to build Java or Node.js
                if (params.Env == 'JAVA_VERSION') {
                    sh "docker build -t my-java-app:${params.Version} ."
                } else if (params.Env == 'NODE_VERSION') {
                    sh "docker build -t my-nodejs-app:${params.Version} ."
                } else {
                    error "Invalid environment specified"
                }
            }
        }
    }
}
